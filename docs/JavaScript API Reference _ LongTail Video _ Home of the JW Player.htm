<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" lang="en" xml:lang="en" dir="ltr">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
	<meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
<script type="text/javascript">var NREUMQ=NREUMQ||[];NREUMQ.push(["mark","firstbyte",new Date().getTime()]);</script>
<link rel="canonical" href="http://www.longtailvideo.com/support/jw-player/28851/javascript-api-reference/" />
<meta http-equiv="x-dns-prefetch-control" content="on" />
<link rel="dns-prefetch" href="//s0-www.ltvimg.com http" />
<link rel="shortcut icon" href="/sites/all/themes/community/favicon.ico" type="image/x-icon" />

	<title>JavaScript API Reference | LongTail Video | Home of the JW Player</title>
	<!-- CSS aggregated by CDN module. -->
<link type="text/css" rel="stylesheet" media="all" href="http://s1-www.ltvimg.com/cdn/farfuture/uzyB-7qXZy9ahWDk_4sLtbOMoGuOBvHcezBtfL81OKU/mtime:1368647112/sites/default/files/css/cdn_css_http_033e2fc60e12732018de8cfcc9f2e95e_codefilter.css" />
<link type="text/css" rel="stylesheet" media="all" href="http://s1-www.ltvimg.com/cdn/farfuture/MShZz5pZZ_Jg16HaTFGLLmvkkAr1nocZbTec5OSlaMg/mtime:1368647112/sites/default/files/css/cdn_css_033e2fc60e12732018de8cfcc9f2e95e.css" />
<!-- CSS aggregated by CDN module. -->
	<script type="text/javascript" src="http://s0-www.ltvimg.com/cdn/farfuture/lg-INBIPZEaUy-k4Bac4bPGiExMk7yFL3-2cK_dOJNY/mtime:1368647105/sites/default/files/js/js_611e3538f18109a7a3f5618503d72436.js"></script>
<script type="text/javascript" src="/jwplayer/jwplayer.js?1368827277"></script>
<script type="text/javascript" src="/jwplayer/key.js?1368827277"></script>
<script type="text/javascript">
<!--//--><![CDATA[//><!--
jQuery.extend(Drupal.settings, { "basePath": "/", "googleanalytics": { "trackOutgoing": 1, "trackMailto": 1, "trackDownload": 1, "trackDownloadExtensions": "7z|aac|arc|arj|asf|asx|avi|bin|csv|doc|exe|flv|gif|gz|gzip|hqx|jar|jpe?g|js|mp(2|3|4|e?g)|mov(ie)?|msi|msp|pdf|phps|png|ppt|qtm?|ra(m|r)?|sea|sit|tar|tgz|torrent|txt|wav|wma|wmv|wpd|xls|xml|z|zip" } });
//--><!]]>
</script>
	<script type="text/javascript" src="http://www.longtailvideo.com/jw/embed/swfobject.js"></script>
</head>
<body>
<div id="Container" class="clearfix">

	
<div id="Top" class="header_top_strip">

	<ul class="header_tab_nav">
		<li class="logo"><a href="http://www.longtailvideo.com/">LongTail Video Home</a></li>
		<li class="products"><a href="http://www.longtailvideo.com/">Products</a></li>
		<li class="support"><a href="http://www.longtailvideo.com/support/">Support</a></li>
	</ul>	
		
	<ul class="links_left">
		<li class="simple_link forums"><a href="http://www.longtailvideo.com/support/forums/">Our Forums</a></li>
		<li class="simple_link blog"><a href="http://www.longtailvideo.com/blog/">Our Blog</a></li>
	</ul>
	
	<ul class="links_right">
		<li class="order"><a href="http://www.longtailvideo.com/order/" class="btn_order button orange">Order Now</a></li>
		<li class="simple_link login"><a href="http://www.longtailvideo.com/sign-up" rel="nofollow">Sign Up</a> &nbsp; / &nbsp; <a href="http://www.longtailvideo.com/sign-in" rel="nofollow">Sign In</a></li>
	</ul>
	
</div><!-- /.header_top_strip -->

<div class="nav_bar product_site_nav">
	<a href="/" class="header_logo"><img src="/sites/all/themes/ltv/images/logo.png" alt="LongTail Video" title="LongTail Video" /></a>

	<ul class="top_nav">
		<li><a id="nav_item_jw" href="http://www.longtailvideo.com/jw-player/">JW Player</a></li>
		<li><a id="nav_item_botr" href="http://www.longtailvideo.com/bits-on-the-run/">Video Platform</a></li>
		<li><a id="nav_item_ads" href="http://www.longtailvideo.com/video-ads/">Video Ads</a></li>
	</ul>
	
	<form id="searchform" action="/jw/include/search_community.php" method="post">
		<fieldset class="clearfix">
			<input type="text" class="txtbox_search" id="searchCommunity" name="searchCommunity" value="Search Support &amp; Forums" onfocus="if
(this.value==this.defaultValue) this.value='';" onblur="if
(this.value=='') this.value='Search Support &amp; Forums';" />
			<button type="submit" class="btn_search" value="Go">Go</button>
		</fieldset>
	</form>
	
</div><!-- /.product_site_nav -->	
	<div id="Header">
		<a href="/support/" class="LogoHeader"><img src="/sites/all/themes/community/images/logo_header.png" height="41" width="140" border="0" alt="LongTail Video" title="LongTail Video" /></a>
		
		<ul class="TertiaryLinks">
			<li><a href="/support/forums/" class="Forums">Forums</a></li>
			<li><a href="/jw-player/wizard/" class="Wizard">Wizard</a></li>
			<li><a href="/jw-player/download/" class="Download">Get JW Player</a></li>
		</ul>
		
		
		
<ul class="TopNav">		     <li id="JWPlayer" class="Top Active hoverable"><a href="/support/jw-player" class="TopLevel">JW Player</a></li>
		     <li id="Forums" class="Top hoverable"><a href="/support/forums" class="TopLevel">Forums</a></li>
		     <li id="BitsontheRun" class="Top hoverable"><a href="/support/bits-on-the-run" class="TopLevel">Bits on the Run</a></li>
		     <li id="Blog" class="Top hoverable"><a href="/blog" class="TopLevel">Blog</a></li>
		</ul>
	</div>		
		
		<div class="SectionNavigation grid12 clearfix">
		<p class="SectionProduct">JW Player</p>		
<div class="SearchMain clearfix">
	<form action="/support/jw-player/28851/javascript-api-reference"  accept-charset="UTF-8" method="post" id="search-block-form">
<div>
<div class="form-item" id="edit-search-block-form-1-wrapper">
 <label for="edit-search-block-form-1">Search this site: </label>
 <input type="text" maxlength="128" name="search_block_form" id="edit-search-block-form-1" size="15" value="" title="Enter the terms you wish to search for." class="form-text" />
</div>
<input type="submit" name="op" id="edit-submit" value="Search"  class="form-submit" />
<input type="hidden" name="form_build_id" id="form-c2bbde12a856728ba58cacadcb1edb5c" value="form-c2bbde12a856728ba58cacadcb1edb5c"  />
<input type="hidden" name="form_id" id="edit-search-block-form" value="search_block_form"  />

</div></form>
</div>	</div>
		
	<div class="grid12">
					</div>

			<div class="ColumnLeft">
			<div class="Sidebar clearfix">
		<!--If its not collapsible -> no class, just <li> -->

<ul id="jw6" class="sidenav">
	<li>
		<span>Documentation</span>
		<ul>
					<li><a href="/support/jw-player/28832/about-jw-player">About the JW Player</a></li>
					<li><a href="/support/jw-player/28833/quick-start-guide">Quick Start Guide</a></li>
                    <li><a href="/support/jw-player/28834/migrating-from-jw5-to-jw6">Migrating from JW5 to JW6</a></li>
                    <li><a href="/support/jw-player/28835/release-notes" rel="nofollow">Release Notes</a></li>
			<li class="closed">   
             	<spatoon>Media & Devices</span>
				<ul>
					<li><a href="/support/jw-player/28836/media-format-support">Media Format Support</a></li>
					<li><a href="/support/jw-player/28837/browser-device-support">Browser Device Support</a></li>
					<li><a href="/support/jw-player/28838/mp4-video-encoding">MP4 Video Encoding</a></li>
					<li class="closed">
						<span>Examples</span>
						<ul>
							<li><a href="/support/jw-player/29234/basic-mp4-video">Basic MP4 Video</a></li>
							<li><a href="/support/jw-player/29235/basic-aac-audio">Basic AAC Audio</a></li>
							<li><a href="/support/jw-player/29236/basic-youtube-stream">Basic YouTube Stream</a></li>
						</ul>
					</li>
				</ul>
			</li>
			<li class="closed">
				<span>Embedding</span>
				<ul>
					<li><a href="/support/jw-player/28839/embedding-the-player">Embedding the Player</a></li>
                                        <li><a href="/support/jw-player/31770/cloud-hosted-vs-self-hosted-jw-player">Cloud-Hosted vs. Self-Hosted</a></li>
					<li><a href="/support/jw-player/28840/troubleshooting-your-setup">Troubleshooting Your Setup</a></li>
					<li><a href="/support/jw-player/28841/branding-your-player">Branding Your Player</a></li>
					<li class="closed">
						<span>Examples</span>
						<ul>
							<li><a href="/support/jw-player/29237/title-and-dimensions">Title and Dimensions</a></li>
							<li><a href="/support/jw-player/29238/audio-only-controlbar">Audio Only Controlbar</a></li>
							<li><a href="/support/jw-player/29239/flash-as-primary">Flash as Primary</a></li>
							<li><a href="/support/jw-player/29240/autostart-and-mute">Autostart and Mute</a></li>
							<li><a href="/support/jw-player/29241/a-chromeless-player">A Chromeless Player</a></li>
							<li><a href="/support/jw-player/29244/custom-clickable-logo">Custom Clickable Logo</a></li>
							<li><a href="/support/jw-player/32427/responsive-design-support">Responsive Design Support</a></li>
							<li><a href="/support/jw-player/29242/player-without-fallback">Player without Fallback</a></li>
						</ul>
					</li>
				</ul>
			</li>	
			<li class="closed">
				<span>Playlists</span>
				<ul>
					<li><a href="/support/jw-player/28842/working-with-playlists">Working with Playlists</a></li>
					<li><a href="/support/jw-player/28843/loading-rss-feeds">Loading RSS Feeds</a></li>
					<li><a href="/support/jw-player/28844/crossdomain-file-loading">Crossdomain File Loading</a></li>
					<li class="closed">
						<span>Examples</span>
						<ul>
							<li><a href="/support/jw-player/29247/basic-inline-playlist">Basic Inline Playlist</a></li>
							<li><a href="/support/jw-player/29248/sd-and-hd-qualities">SD and HD Qualities</a></li>
							<li><a href="/support/jw-player/29253/basic-rss-feed">Basic RSS Feed</a></li>
							<li><a href="/support/jw-player/29254/sd-and-hd-qualities-in-rss">SD and HD Qualities in RSS</a></li>
							<li><a href="/support/jw-player/29249/playlist-sidebar-component">Playlist Sidebar Component</a></li>
							<li><a href="/support/jw-player/31802/youtube-rss-feed">YouTube RSS Feed</a></li>
						</ul>
					</li>
				</ul>
			</li>			
			<li class="closed">
				<span>Text Tracks</span>
				<ul>
                                        <li><a href="/support/jw-player/28845/adding-video-captions">Adding Video Captions</a></li>
					<li><a href="/support/jw-player/31778/adding-tooltip-thumbnails">Adding Tooltip Thumbnails</a></li>
					<li class="closed">
						<span>Examples</span>
						<ul>
							<li><a href="/support/jw-player/29360/basic-vtt-captions">Basic VTT Captions</a></li>
                                                        <li><a href="/support/jw-player/31804/basic-tooltip-thumbs">Basic Tooltip Thumbnails</a></li>
							<li><a href="/support/jw-player/29361/multiple-subtitle-tracks">Multiple Subtitle Tracks</a></li>
							<li><a href="/support/jw-player/29363/big-red-outlined-captions">Big Red Outlined Captions</a></li>
						</ul>
					</li>
				</ul>
			</li>			
			<li class="closed">
				<span>Skinning</span>
				<ul>
                    <li><a href="/support/jw-player/28846/using-jw-player-skins">Using JW Player Skins</a></li>
					<li><a href="/support/jw-player/28847/building-jw-player-skins">Building JW Player Skins</a></li>
                    <li><a href="/support/jw-player/28849/skin-xml-reference">Skin XML Reference</a></li>
					<li class="closed">
						<span>Examples</span>
						<ul>
							<li><a href="/support/jw-player/29364/basic-skin-setup">Basic Skin Setup</a></li>
							<li><a href="/support/jw-player/29367/hiding-skin-elements">Hiding Skin Elements</a></li>
							<li><a href="/support/jw-player/29366/changing-skin-elements">Changing Skin Elements</a></li>
						</ul>
					</li>
				</ul>
			</li>			
			<li class="closed">
				<span>JavaScript API</span>
				<ul>
					<li><a href="/support/jw-player/28850/using-the-javascript-api">Using the JavaScript API</a></li>
					<li><a href="/support/jw-player/28851/javascript-api-reference">JavaScript API Reference</a></li>
					<li class="closed">
						<span>Examples</span>
						<ul>
							<li><a href="/support/jw-player/29404/video-download-button">Video Download Button</a></li>
							<li><a href="/support/jw-player/29405/autostart-only-once">Autostart Only Once</a></li>
							<li><a href="/support/jw-player/29411/resizing-the-player">Resizing the Player</a></li>
							<li><a href="/support/jw-player/29406/a-poster-less-preview">A Posterless Preview</a></li>
							<li><a href="/support/jw-player/29413/mutually-exclusive-playback">Mutually Exclusive Playback</a></li>
							<li><a href="/support/jw-player/29414/link-to-time-offset">Link to Time Offset</a></li>
							<li><a href="/support/jw-player/31800/loading-new-playlists">Loading New Playlists</a></li>
						</ul>
					</li>
				</ul>
			</li>
			<li class="closed">
				<span>WordPress</span>
				<ul>
					<li><a href="/support/jw-player/31561/getting-started-with-the-jw-player-wordpress-plugin">Getting Started with the WordPress Plugin</a></li>
					<li><a href="/support/jw-player/31560/jw-player-wordpress-plugin-reference">WordPress Plugin Reference</a></li>
					<li><a href="/support/jw-player/29912/upgrading-wordpress-from-jw5-to-jw6">Upgrading WordPress from JW5 to JW6</a></li>
				</ul>
			</li>
			<li class="closed">
				<span>Analytics</span>
				<ul>
                    <li><a href="/support/jw-player/28852/using-jw-player-analytics">Using JW Player Analytics</a></li>
					<li><a href="/support/jw-player/28853/using-google-analytics">Using Google Analytics</a></li>
				</ul>
			</li>			
			<li class="closed">
				<span>Streaming</span>
				<ul>
                    <li><a href="/support/jw-player/28854/using-rtmp-streaming">Using RTMP Streaming</a></li>
					<li><a href="/support/jw-player/28855/pseudo-streaming-in-flash">Pseudo-streaming in Flash</a></li>
					<li><a href="/support/jw-player/28856/using-apple-hls-streaming">Using Apple HLS Streaming</a></li>
					<li class="closed">
						<span>Examples</span>
						<ul>
							<li><a href="/support/jw-player/29393/hls-adaptive-stream">HLS Adaptive Streaming</a></li>
							<li><a href="/support/jw-player/29394/hls-with-mp4-fallback">HLS with MP4 Fallback</a></li>
							<li><a href="/support/jw-player/29395/rtmp-single-stream">RTMP Single Stream</a></li>
							<li><a href="/support/jw-player/29365/rtmp-dynamic-stream">RTMP Dynamic Stream</a></li>
							<li><a href="/support/jw-player/29396/rtmp-stream-subscription">RTMP Stream Subscription</a></li>
							<li><a href="/support/jw-player/29392/flash-pseudo-streaming">Flash Pseudo Streaming</a></li>
						</ul>
					</li>
				</ul>
			</li>			
			<li class="closed">
				<span>Discovery</span>
				<ul>
                    <li><a href="/support/jw-player/28857/social-sharing-options">Social Sharing Options</a></li>
					<li><a href="/support/jw-player/28858/displaying-related-videos">Displaying Related Videos</a></li>
					<li class="closed">
						<span>Examples</span>
						<ul>
							<li><a href="/support/jw-player/29368/basic-sharing-setup">Basic Sharing Setup</a></li>
							<li><a href="/support/jw-player/29369/embed-code-sharing">Embed Code Sharing</a></li>
							<li><a href="/support/jw-player/29371/linking-related-videos">Linking Related Videos</a></li>
							<li><a href="/support/jw-player/29372/playing-related-videos">Playing Related Videos</a></li>
						</ul>
					</li>
				</ul>
			</li>			
			<li class="closed">
				<span>Advertising</span>
				<ul>
                    <li><a href="/support/jw-player/28859/supported-ad-formats">Supported Ad Formats</a></li>
					<li><a href="/support/jw-player/28862/configuring-video-ads">Configuring Video Ads</a></li>
                    <li><a href="/support/jw-player/30261/migrating-from-ova-or-ima-to-jw6">Migrating from OVA/IMA to JW6</a></li>
					<li class="closed">
						<span>Examples</span>
						<ul>
							<li><a href="/support/jw-player/31401/vast-preroll-video">VAST Preroll Video</a></li>
							<li><a href="/support/jw-player/29387/ima-preroll-video">IMA Preroll Video</a></li>
							<li><a href="/support/jw-player/31402/vpaid-interactive-preroll">VPAID Interactive Preroll</a></li>
							<li><a href="/support/jw-player/29388/preroll-with-companion-ad">IMA Preroll with Companion</a></li>
							<li><a href="/support/jw-player/31404/ad-scheduling">Ad Scheduling</a></li>
							<li><a href="/support/jw-player/31403/static-vast-xml-tag">Static VAST XML Tag</a></li>							
						</ul>
					</li>
				</ul>
			</li>						
		</ul>
	</li>
</ul></div>
		</div>
		<div class="ColumnRight Document">
		
		
		<h1>JavaScript API Reference</h1>						
		<p>This guide provides a reference to all the JW Player 6 JavaScript API calls available. For an introduction to - and general overview of the player API - see <a href="/support/jw-player/28850/using-the-javascript-api">Using the JavaScript API</a>.</p>


<h2><a name="ready"></a>Ready</h2>

<p>These API calls are used to learn when and with which technology players are instantiated.</p>

<dl><dt>getRenderingMode()</dt><dd>
Returns the rendering mode in which the player is setup. Can be <strong>flash</strong> or <strong>html5</strong>.
</dd></dl>

<dl><dt>onReady(<em>callback</em>)</dt><dd>
Fired when the player has initialized and is ready for playback. Has no attributes.
</dd></dl>


<h2><a name="playlist"></a>Playlist</h2>

<p>These API calls are used for loading and retrieving the current playlist (of one or more items), as well as for navigating between playlist items.</p>

<p>The data model of a playlists is as follows:</p>
<ul>
<li>The <em>playlist</em> is an Array, containing one or more playlist items.</li>
<li>Each <em>item</em> is an Object, containing the <em>title</em> (String), <em>description</em> (String), <em>mediaid</em> (String), <em>image</em> (String), <em>sources</em> (Array) and  <em>tracks</em> (Array) properties.</li>
<li>The <em>sources</em> Array in turn contain a list of Objects, each with a <em>file</em>, <em>type</em>, <em>label</em> and <em>default</em> property.</li>
<li>The <em>tracks</em> Array in turn contain a list of Objects, each with a <em>file</em>, <em>kind</em> and <em>default</em> property.</li>
</ul>

<p>Additionally, each playlist item has a <em>file</em> property, which acts as a shortcut to the <em>file</em> of the first entry in the <em>sources</em> Array. This shortcut makes it easier to do basic playlist loading or fetching, since most publishers will setup their playlist items with one file only.</p>

<p>See <a href="/support/jw-player/28842/working-with-playlists">Working With Playlists</a> for a description of each property and some example playlists.</p>

<dl><dt>getPlaylist()</dt><dd>
Returns the player's current playlist array.
</dd><dt>getPlaylistItem(<em>index</em>)</dt><dd>
Returns the playlist item object at the specified index. If the index is not specified, the currently playing playlistItem is returned.
</dd></dl>

<dl><dt>load(<em>playlist</em>)</dt><dd>
Loads a new playlist into the player. The <em>playlist</em> parameter is required and can be either:<ul>
<li>An <strong>Array</strong>, containing playlist items.</li>
<li>A <string>string</string>, pointing to the location of an RSS feed.</li>
</ul></dd><dt>playlistItem(<em>index</em>)</dt><dd>
Start playback of the playlist item at the specified index.
</dd></dl>

<dl><dt>onPlaylist(<em>callback</em>)</dt><dd>
Fired when a new playlist has been loaded into the player. Note this event is not fired as part of the initial playlist load (playlist is loaded when <strong>onReady</strong> is called). Event attributes:
<ul><li><strong>playlist</strong> (Array): The new playlist; an array of playlist items.
</li></ul></dd><dt>onPlaylistItem(<em>callback</em>)</dt><dd>
Fired when the playlist index changes to a new playlist item. This event occurs before the player begins playing the new playlist item. Event attributes:
<ul><li><strong>index</strong> (Number): Zero-based index into the playlist array (e.g. 0 is the first item).
</li><li><strong>playlist</strong> (Array): The new playlist; an array of playlist items.
</li></ul></dd><dt>onComplete(<em>callback</em>)</dt><dd>
Fired every time when a playlist item completes playback. It has no event attributes.
</dd><dt>onPlaylistComplete(<em>callback</em>)</dt><dd>
Fired when the player is done playing all items in the playlist. However, if the <strong>repeat</strong> option is set <em>true</em>, this is never fired.</dd></dl>


<h2><a name="buffer"></a>Buffer</h2>

<p>These API calls are used to update clients with the percentage of a file that's buffered into the player. This only applies to progressive downloads of media; streaming media do not expose this behavior.</p>

<dl><dt>getBuffer()</dt><dd>
Returns the current PlaylistItem's filled buffer, as a percentage (0 to 100) of the total video's length.
</dd></dl>

<dl><dt>onBufferChange(<em>callback</em>)</dt><dd>
Fired when the currently playing item loads additional data into its buffer. Event attributes:
<ul><li><strong>buffer</strong> (Number): Percentage between 0 and 100 of the current media that is buffered.
</li></ul></dd></dl>


<h2><a name="playback"></a>Playback</h2>

<p>These API calls are used to retrieve and change the current playback state of the player: is the player idle, buffering, playing or paused.</p>

<dl><dt>getState()</dt><dd>
Returns the player's current playback state. These can be:
<ul><li><strong>IDLE</strong>: either playback has not started or playback was stopped (due to a stop() call or an error). Either the <em>play</em> or the <em>error</em> icon is visible in the display.
</li><li><strong>BUFFERING</strong>: user pressed play, but sufficient data to start playback has to be loaded first. The <em>buffering</em> icon is visible in the display.
</li><li><strong>PLAYING</strong>: the video is currently playing. No icon is visible in the display.
</li><li><strong>PAUSED</strong>: the video is currently paused. The <em>play</em> icon is visible in the display.
</li></ul>
</dd></dl>

<dl><dt>play(<em>state</em>)</dt><dd>
Toggles playback of the player. If the state is set <strong>true</strong> the player will start playing, if set <strong>false</strong> the player will pause and if omitted, the player will toggle playback.
</dd><dt>pause(<em>state</em>)</dt><dd>
Toggles playback of the player. If the state is set <strong>true</strong> the player will pause, if set <strong>false</strong> the player will start playing and if omitted, the player will toggle playback.
</dd><dt>stop()</dt><dd>
Stops the player (returning it to the IDLE state) and unloads the currently playing media file.
</dd></dl>


<dl><dt>onBeforePlay(<em>callback</em>)</dt><dd>
Fired just before the player begins playing. Unlike the onPlay event, the player will not have begun playing or buffering when triggered. This event can be used to prevent playback by calling <strong>stop()</strong>.
</dd><dt>onPlay(<em>callback</em>)</dt><dd>
Fired when the player enters the PLAYING state. Event attributes:
<ul><li><strong>oldstate</strong> (String): the state the player moved from. Can be BUFFERING or PAUSED.
</li></ul></dd><dt>onPause(<em>callback</em>)</dt><dd>
Fired when the player enters the PAUSED state. Event attributes:
<ul><li><strong>oldstate</strong> (String): the state the player moved from. Can be BUFFERING or PLAYING.
</li></ul></dd><dt>onBuffer(<em>callback</em>)</dt><dd>
Fired when the player enters the BUFFERING state. Event attributes:
<ul><li><strong>oldstate</strong> (String): the state the player moved from. Can be IDLE, PLAYING or PAUSED.
</li></ul></dd><dt>onIdle(<em>callback</em>)</dt><dd>
Fired when the player enters the IDLE state. Event attributes:
<ul><li><strong>oldstate</strong> (String): the state the player moved from. Can be BUFFERING, PLAYING or PAUSED.
</li></ul></dd></dl>



<h2><a name="seek"></a>Seek</h2>

<p>These API calls are used to retrieve and update the current media playback position.</p>

<dl><dt>getPosition()</dt><dd>
Returns the current playback position in seconds, as a number.
</dd><dt>getDuration()</dt><dd>
Returns the currently playing PlaylistItem's duration in seconds, as a number. If a duration of <strong>-1</strong> is returned, the current media is a live stream and therefore has no position, duration or seek capability.
</dd></dl>
<dl><dt>seek(<em>position</em>)</dt><dd>
Jump to the specified position within the currently playing item. The <strong>position</strong> is required and must be provided as an integer, in seconds.
</dd></dl>
<dl><dt>onSeek(<em>callback</em>)</dt><dd>
Fired after a seek has been requested either by scrubbing the controlbar or through the API. Event attributes:
<ul><li><strong>position</strong> (Number): The position of the player before the player seeks (in seconds).
</li><li><strong>offset</strong> (Number): The requested position to seek to (in seconds).
</li></ul></dd><dt>onTime(<em>callback</em>)</dt><dd>
While the player is playing, this event is fired as the playback position gets updated. This may occur as frequently as 10 times per second. Event attributes:
<ul><li><strong>duration</strong> (Number): Duration of the current item in seconds.
</li><li><strong>position</strong> (Number): Playback position in seconds.
</li></ul></dd></dl>
<p>
Note that seeking for progressive downloads in Flash only works within the already downloaded portion. When seeking beyond that section, the video seeks to the last downloaded frame. This issue can be circumvented by implementing <a href="/support/jw-player/28855/pseudo-streaming-in-flash">Pseudo Streaming in Flash</a>. This issue is not present for HTML5.
</p>



<h2><a name="volume"></a>Volume</h2>

<p>These API calls are used to change the playback volume of the player. Note they only work on desktop browsers, <strong>not</strong> on mobile devices.</p>

<dl><dt>getMute()</dt><dd>
Returns the player's current audio muting state (<strong>true</strong> when there's no sound).
</dd><dt>getVolume()</dt><dd>
Returns the current playback volume percentage, as a number from 0 to 100.
</dd></dl>

<dl><dt>setMute(<em>state</em>)</dt><dd>
Change the player's mute state (no sound). If the state is undefined, perform a muting toggle. Otherwise, mute the player if <strong>true</strong>, and unmute if <strong>false</strong>.
</dd><dt>setVolume(<em>volume</em>)</dt><dd>
Sets the player's audio volume percentage, as a number between 0 and 100.
</dd></dl>

<dl><dt>onMute(<em>callback</em>)</dt><dd>
Fired when the player has gone into or out of the mute state. Event attributes:
<ul><li><strong>mute</strong> (Boolean): New mute state.
</li></ul></dd><dt>onVolume(<em>callback</em>)</dt><dd>
Fired when the player audio volume percentage was changed. Event attributes:
<ul><li><strong>volume</strong> (Number): New volume percentage.
</li></ul></dd></dl>



<h2><a name="resize"></a>Resize</h2>

<p>These API calls are used to retrieve and update the current player dimensions and fullscreen state. Note there is no API call to <strong>set fullscreen</strong>, due to phishing-related security restrictions in both Flash and HTML5.</p>

<dl><dt>getFullscreen</dt><dd>
Returns the current fullscreen state (<strong>true</strong> or <strong>false</strong>).
</dd><dt>getHeight</dt><dd>
Returns the player's current height, in pixels.
</dd><dt>getWidth</dt><dd>
Returns the player's current width, in pixels.
</dd></dl>

<dl><dt>resize(<em>width</em>, <em>height</em>)</dt><dd>
Resizes the player to the specified width and height, in pixels. It's also possible to set percentages (e.g. <strong>50%</strong>).
</dd></dl>

<dl><dt>onFullscreen(<em>callback</em>)</dt><dd>
Fired when the player toggles to/from fullscreen. Event attributes:
<ul><li><strong>fullscreen</strong> (Boolean): new fullscreen state.
</li></ul></dd><dt>onResize(<em>callback</em>)</dt><dd>
Fired when the player's on-page dimensions have changed. Is not fired in response to a fullscreen change. Event attributes:
<ul><li><strong>width</strong> (Number): The new width of the player.
</li><li><strong>height</strong> (Number): The new height of the player.
</li></ul></dd></dl>



<h2><a name="quality"></a>Quality</h2>

<p>These API calls are used to listen to or update the video quality if multiple quality levels of a video are provided.</p>

<dl><dt>getQualityLevels()</dt><dd>
Returns an array with quality levels from the player. Each level is an object that always contains a <strong>label</strong> property and sometimes additional properties (like <strong>width</strong> or <strong>bitrate</strong>).
</dd><dt>getCurrentQuality()</dt><dd>
Returns the index of the currently active quality level.
</dd></dl>

<dl><dt>setCurrentQuality(<em>index</em>)</dt><dd>
Change the quality level to the provided index. The index must be within the list provided by <strong>getQualityLevels</strong>.
</dd></dl>

<dl><dt>onQualityLevels(<em>callback</em>)</dt><dd>
Fired when the list of available quality levels is updated. Happens e.g. shortly after a playlist item starts playing. Event attributes:
<ul><li><strong>levels</strong> (Array): the full array with new quality levels.
</li></ul></dd><dt>onQualityChange (<em>callback</em>)</dt><dd>
Fired when the active quality level is changed. Happens in respons to e.g. a user clicking the controlbar quality menu or a script calling <em>setCurrentQuality</em>. Event attributes:
<ul><li><strong>currentQuality</strong> (Number): index of the new quality level in the <em>getQualityLevels()</em>  array.
</li></ul></dd></dl>



<h2><a name="captions"></a>Captions</h2>

<p>These API calls are used to listen to or update the active captions track if one or more closed captions tracks are provided with a video. This API can be used to log captions usage or build your own CC menu outside JW Player.</p>

<dl><dt>getCaptionsList()</dt><dd>
Returns an array with captions tracks from the player. Each track is an object that contains a <strong>label</strong> property.
</dd><dt>getCurrentCaptions()</dt><dd>
Returns the index of the currently active captions track. Note the captions are <strong>Off</strong> if the index is 0.
</dd></dl>

<dl><dt>setCurrentCaptions(<em>index</em>)</dt><dd>
Change the visible captions track to the provided index. The index must be within the list provided by <strong>getCaptionsList</strong>. Note an index of 0 always turns the captions Off.
</dd></dl>

<dl><dt>onCaptionsList(<em>callback</em>)</dt><dd>
Fired when the list of available captions tracks is updated. Happens shortly after a playlist item starts playing. Event attributes:
<ul><li><strong>tracks</strong> (Array): the full array with new captions tracks.
</li></ul></dd><dt>onCaptionsChange (<em>callback</em>)</dt><dd>
Fired when the active captions track is changed. Happens in respons to e.g. a user clicking the controlbar CC menu or a script calling <em>setCurrentCaptions</em>. Event attributes:
<ul><li><strong>track</strong> (Number): index of the new active captions track in the <em>getCaptionsList()</em>  array.  Note the captions are <strong>Off</strong> if the track is 0.
</li></ul></dd></dl>




<h2><a name="button"></a>Button</h2>

<p>With the button API, it's possible to add buttons to the dock, e.g. for social sharing, video discovery, interface toggles or registrations/logins.</p>

<dl><dt>addButton(<em>icon, label, handler, id</em>)</dt><dd>
Adds a button to the dock. Attributes:
<ul><li><strong>icon</strong> (String): The URL to a GIF, JPG or PNG image that is displayed in the button. Monochromatic, white icons of about 20x20 pixels work well with many skins. Base64 encoded image strings do not work.
</li><li><strong>label</strong> (String): Human-readable label of the button (e.g. <em>Buy this Video</em>), visible in a tooltip on rollover.
</li><li><strong>handler</strong> (Function): The JavaScript function that is called when the button is clicked.
</li><li><strong>id</strong> (String): The string used to identify the button. It must be unique across all buttons (an error is thrown otherwise).
</li></ul></dd><dt>removeButton(<em>id</em>)</dt><dd>
Removes a button from the dock. Attributes:
<ul><li><strong>id</strong> (String): The id used to identify the button when it was added.
</li></ul></dd></dl>



<h2><a name="controls"></a>Controls</h2>

<p>This API call allows developers to interact with the built-in player controls (dock buttons, controlbar and display icons). Note that enabled controls will still fade out during playback if the video has no keyboard/mouse focus. When controls are disabled, JW Player is completely chrome-less.</p>

<dl><dt>getControls()</dt><dd>
Returns whether the built-in controls are currently enabled.
</dd><dt>getSafeRegion()</dt><dd>
Returns an array with the region of the display not used by the controls. Scripts and plugins use this information to ensure their visual assets don't overlap with the controls. An example region the call can return is: <pre>{ x:0, y:30, width:480, height:200 }</pre>
</dd></dl>

<dl><dt>setControls(<em>controls</em>)</dt><dd>
Enable the built-in controls by setting them <strong>true</strong>, disable the controls by setting them <strong>false</strong>.
</dd></dl>

<dl><dt>onControls(<em>callback</em>)</dt><dd>
Fired when controls are enabled or disabled by a script. Event attributes:
<ul><li><strong>controls</strong> (Boolean): New state of the controls. Is <strong>true</strong> when the controls were just enabled.
</li></ul></dd><dt>onDisplayClick(<em>callback</em>)</dt><dd>
Fired when a user clicks the video display. Especially useful for wiring your own controls when the built-in ones are disabled. Note the default click action (toggling play/pause) will still occur. There are no event attributes.
</li></ul></dd></dl>



<h2><a name="error"></a>Error</h2>

<p>This API call allows developers to listen for and react to <em>media loading errors</em> (e.g. when a video URL is not found or a streaming server disconnects).</p>

<dl><dt>onError(<em>callback</em>)</dt><dd>
Fired when a media loading error has occurred in the player. Event attributes:
<ul><li><strong>message</strong> (String): The reason for the error. See <a href="/support/jw-player/28840/troubleshooting-your-setup">Troubleshooting your Setup</a> for a list of all possible media loading errors.
</li></ul></dd></dl>

<p>Note an error event is <strong>not</strong> fired when a <em>player setup error</em> occurs, since this generally happens before the API is ready.



<h2><a name="metadata"></a>Metadata</h2>

<p>This API call allows developers to listen for metadata embedded in the media file (e.g. dimensions or TX3G cues in MP4 files).</p>

<dl><dt>onMeta(<em>callback</em>)</dt><dd>
Fired when new metadata has been broadcasted by the player. Event attributes:
<ul><li><em>metadata</em> (Object): Object containing the new metadata. This can be metadata hidden in the media (XMP, ID3, keyframes) or metadata broadcasted by the playback provider (bandwidth, quality switches).
</li></ul></dd></dl>		

	</div> 
</div>


<div id="Footer">
	
<div class="footer_links">

	<div class="link_groups clearfix">
	
		<div class="column c1">
			<h5>JW Player</h5>
			<ul>
				<li><a rel="nofollow" href="http://www.longtailvideo.com/jw-player/download/" class="btn_download button grey">Get JW Player</a></li>
				<li><a rel="nofollow" href="http://www.longtailvideo.com/jw-player/">Overview</a></li>
				<li><a rel="nofollow" href="http://www.longtailvideo.com/jw-player/features/">Features</a></li>
				<li><a rel="nofollow" href="http://www.longtailvideo.com/jw-player/pricing/">Pricing</a></li>
				<li><a rel="nofollow" href="http://www.longtailvideo.com/jw-player/enterprise-contact-us">Enterprise</a></li>
				<li><a rel="nofollow" href="http://www.longtailvideo.com/jw-player/faq/">JW Player FAQ</a></li>
			</ul>
		</div>
		
		<div class="column c2">
			<h5>Video Platform</h5>
			<ul>
				<li><a rel="nofollow" href="http://www.longtailvideo.com/bits-on-the-run/">Overview</a></li>
				<li><a rel="nofollow" href="http://www.longtailvideo.com/bits-on-the-run/features/">Features</a></li>
				<li><a rel="nofollow" href="http://www.longtailvideo.com/bits-on-the-run/pricing/">Pricing</a></li>
				<li><a rel="nofollow" href="http://www.longtailvideo.com/bits-on-the-run/enterprise-contact-us">Enterprise</a></li>
				<li><a rel="nofollow" href="http://www.longtailvideo.com/bits-on-the-run/faq/">Bits on the Run FAQ</a></li>
				<li><a rel="nofollow" href="http://dashboard.bitsontherun.com/">Bits on the Run Sign In</a></li>
			</ul>
		</div>
		
		<div class="column c3">
			<h5>Video Ads</h5>
			<ul>
				<li><a rel="nofollow" href="http://www.longtailvideo.com/video-ads/">Overview</a></li>
				<li><a rel="nofollow" href="http://www.longtailvideo.com/video-ads/enterprise-contact-us">Enterprise</a></li>
				<li><a rel="nofollow" href="http://www.longtailvideo.com/video-ads/vast-vpaid">VAST/VPAID</a></li>
			</ul>
			<br />
			<h5>AdSolution</h5>
			<ul>
				<li><a rel="nofollow" href="https://dashboard.longtailvideo.com/">Sign In</a></li>
			</ul>
		</div>
		
		<div class="column c4">
			<h5>Company</h5>
			<ul>
				<li><a rel="nofollow" href="http://www.longtailvideo.com/about/">About Us</a></li>
				<li><a rel="nofollow" href="http://www.longtailvideo.com/about/management-team/">Management Team</a></li>
				<li><a rel="nofollow" href="http://www.longtailvideo.com/news/">In the News</a></li>
				<li><a rel="nofollow" href="http://www.longtailvideo.com/blog/">Our Blog</a></li>
				<li><a rel="nofollow" href="http://www.longtailvideo.com/about/customers/">Customers</a></li>
				<li><a rel="nofollow" href="http://www.longtailvideo.com/about/careers/">Careers</a></li>
				<li><a rel="nofollow" href="http://www.longtailvideo.com/contact-us/">Contact Us</a></li>
			</ul>
		</div>
		
		<div class="column c5">
			<h5>Support: JW Player</h5>
			<ul>
				<li><a rel="nofollow" href="http://www.longtailvideo.com/support/forums/jw-player/">JW Player Forums</a></li>
				<li><a rel="nofollow" href="http://www.longtailvideo.com/support/jw-player/">Documentation</a></li>
				<li><a rel="nofollow" href="http://www.longtailvideo.com/jw-player/wizard/">Setup Wizard</a></li>
			</ul>
			<br />
			<h5>Support: Video Platform</h5>
			<ul>
				<li><a rel="nofollow" href="http://www.longtailvideo.com/support/forums/bits-on-the-run/">Bits on the Run Forums</a></li>
				<li><a rel="nofollow" href="http://www.longtailvideo.com/support/bits-on-the-run/">Documentation</a></li>
			</ul>
		</div>
		
		<div class="column c6">
			<h5>Quick Links</h5>
			<ul>
				<li><a rel="nofollow" href="http://www.longtailvideo.com/html5/">HTML5 Report</a></li>
				<li><a rel="nofollow" href="http://www.longtailvideo.com/enterprise/">Enterprise Solutions</a></li>
				<li><a rel="nofollow" href="http://www.longtailvideo.com/jw-player/upgrade-steps">Upgrade Steps</a></li>
				<li><a rel="nofollow" href="http://www.longtailvideo.com/jw-player/license">License</a></li>
				<li><a rel="nofollow" href="http://www.longtailvideo.com/jw5/">JW5 Legacy</a></li>
				<li><a rel="nofollow" href="http://www.longtailvideo.com/support/open-video-ads">OVA</a></li>
			</ul>
		</div>
		
	</div><!-- /.link_groups -->
	
</div><!-- /.footer_links -->


<div class="footer_bottom clearfix">
	
	<div class="column social_links">
		
		<h4>Stay in Touch</h4>
		
		<!-- Facebook -->            
		<div class="lt_fb">
			<div id="facebook_like"></div>
		</div>
				
		<!-- G+ -->
		<div class="lt_google">
			<a href="https://plus.google.com/108816587456088937096?prsrc=3" style="text-decoration:none;"><img src="https://ssl.gstatic.com/images/icons/gplus-16.png" alt="" style="border:0;width:16px;height:16px; margin-right:6px; margin-top:8px;"/></a>
			<a href="https://plus.google.com/108816587456088937096?prsrc=3" style="text-decoration:none; color:#333333; font-size:11px; font-weight:bold;">
			<span style="position:relative; text-align:left; top:-5px; background-color:#ededed; border:1px solid #cccccc; -webkit-border-radius:3px;
			-moz-border-radius:3px;
			border-radius:3px; 
			padding:3px;
			background: #ededed;
			background: -webkit-gradient(linear, left top, left bottom, from(#ffffff), to(#e0e0e0));
			background: -moz-linear-gradient(top,  #ffffff,  #e0e0e0);
			">+ Add LongTail Video to your circles</span>
			</a>
		</div>

		<!-- Twitter -->
		<div class="lt_twitter">
			<img src="/content/images/phoenix/longtail_twitter.png" class="twitter_icon" width="44" height="76" alt="Follow us on Twitter">
			Follow us on Twitter: <a href="https://twitter.com/intent/follow?screen_name=longtailvideo" target="new">@longtailvideo</a>
		</div>
		
	</div><!-- /.social_links -->
	
	
	
	<div class="column newsletter_sign_up">
	
		<h4>Sign Up for Our Newsletter</h4>
		
		<img src="/content/images/phoenix/footer_newsletter.png" width="168" height="195" alt="Sign Up for Our Newsletter" class="newsletter_image">
		
		<p>Receive our monthly news and views, right in your inbox. Our newsletter covers updates to the <strong>JW Player</strong> and analysis of the video industry at large.</p>

		<div id="icontact_prompt">
			<input type="text" id="icontact_email" class="textbox" value="Enter your email here" onBlur="if(this.value=='') this.value='Enter your email here';" onFocus="if(this.value==this.defaultValue) this.value='';">
			<a class="btn_sign_up" onClick="icontact_subscribe();">Sign Up</a>
		</div>
		<p id="icontact_success" style="display:none">Thanks! You are now subscribed!</p>
		<p id="icontact_failure" style="display:none">Failed to add subscription.</p>

	</div><!-- /.newsletter_sign_up -->
	
	
	
	<div class="column recent_news">
		
		<h4>Recent News</h4>
		<p>
			<strong>JW Player in Forbes</strong><br />
			Dave Otten, LongTail Video CEO, shares the great start-up story behind JW Player with Forbes.
			<br />
			<a rel="nofollow" href="http://www.longtailvideo.com/news/" class="more_link">More Here</a>
			<span class="news_meta">April 5, 2013</span>	
		</p>
		
	</div><!-- /.recent_news -->
	
</div><!-- /.footer_bottom -->



<div class="footer_colophon">

	<p class="colophon">&copy; 2013 LongTail Ad Solutions. All Rights Reserved. LongTail Video is a registered trademark. <a rel="nofollow" href="http://www.longtailvideo.com/tos">Terms of Service</a> | <a rel="nofollow" href="http://www.longtailvideo.com/privacy">Privacy Policy</a> | <a rel="nofollow" href="http://www.longtailvideo.com/dmca">DMCA</a></p>

</div><!-- /.footer_colophon -->





<script type="text/javascript">
	$(window).load(function () {
	
		// twitter not needed any more
		// var scripts = [{ src: "http://platform.twitter.com/widgets.js" }];
		var scripts = [];
		
		for (var script in scripts) {
			var scripttag = document.createElement("script");
			scripttag.type = "text/javascript";
			scripttag.src = scripts[script].src;
			if (scripts[script].location) {
				document.getElementById(scripts[script].location).parentNode.replaceChild(scripttag, document.getElementById(scripts[script].location));
			} else {
				document.getElementsByTagName("head")[0].appendChild(scripttag);
			}
			if (scripts[script].callback) {
				scripts[script].callback();
			}
		}
		
		var iframes = {
			"facebook_like": {
				src: "http://www.facebook.com/plugins/like.php?app_id=221239234572119&href=http%3A%2F%2Fwww.longtailvideo.com&send=false&layout=standard&width=240&show_faces=false&action=like&colorscheme=light&font&height=30",
				scrolling: "no",
				frameBorder: "0",
				allowTransparency: "true",
				style: {
					border:"none", 
					overflow:"hidden",
					width:"240px",
					height:"30px",
					padding: "5px 0"
				}

			}
		};
		
		for (var iframe in iframes) {
			var iframetag = document.createElement("iframe");
			var iframeobject = iframes[iframe];
			for (var attribute in iframeobject){
				if (attribute != "style")
				iframetag[attribute] = iframeobject[attribute];
			}
			for (var attribute in iframeobject.style) {
				iframetag.style[attribute] = iframeobject.style[attribute];
			}
			document.getElementById(iframe).parentNode.replaceChild(iframetag, document.getElementById(iframe));
		}
		
	});

	function icontact_subscribe() {
		var email = encodeURIComponent(document.getElementById("icontact_email").value);
		if (email != "") {
			document.getElementById("icontact_prompt").style.display = "none";
			addEmailToList(email, 9910477, function() {
				var responseText = iContactReq.responseText;
				if (responseText != "") {
					if (responseText == "1") {
						document.getElementById("icontact_success").style.display = "block";
						document.getElementById("icontact_prompt").style.display = "none";
					} else {
						document.getElementById("icontact_failure").style.display = "block";
					}
				}
			});
		}
	}
	
	var iContactReq;
	function addEmailToList(email, list_id, callback) {
	  iContactReq = null;
	  if (window.XMLHttpRequest) {
		iContactReq = new XMLHttpRequest();
	  } else {
		iContactReq = new ActiveXObject("Microsoft.XMLHTTP");
	  }
	  if (iContactReq) {
		iContactReq.onreadystatechange = callback;
		iContactReq.open("GET", "/jw/include/common/icontact_ajax.php?email=" + email + "&list_id=" + list_id + "&ref=homepage", true);
		iContactReq.send();
	  }
	}
	
</script></div><!-- /#Footer -->

<script type="text/javascript">
<!--//--><![CDATA[//><!--
var _gaq = _gaq || [];_gaq.push(["_setAccount", "UA-4011032-1"]);_gaq.push(["_trackPageview"]);(function() {var ga = document.createElement("script");ga.type = "text/javascript";ga.async = true;ga.src = ("https:" == document.location.protocol ? "https://ssl" : "http://www") + ".google-analytics.com/ga.js";var s = document.getElementsByTagName("script")[0];s.parentNode.insertBefore(ga, s);})();
//--><!]]>
</script>
<script type="text/javascript">if(!NREUMQ.f){NREUMQ.f=function(){NREUMQ.push(["load",new Date().getTime()]);var e=document.createElement("script");e.type="text/javascript";e.src=(("http:"===document.location.protocol)?"http:":"https:")+"//"+"d1ros97qkrwjf5.cloudfront.net/42/eum/rum.js";document.body.appendChild(e);if(NREUMQ.a)NREUMQ.a();};NREUMQ.a=window.onload;window.onload=NREUMQ.f;};NREUMQ.push(["nrfj","beacon-3.newrelic.com","01407b578b","2059510","ZFwBZBBYWUBXUBdZWl0WNkILFl5dUlYbHkVbSQ==",0,25,new Date().getTime(),"","","","",""]);</script>
</body>
</html>